analyze_problem_task:
  description: "Analyze the LeetCode problem and understand its requirements:\n\n{leetcode_problem}"
  expected_output: "An analysis of the problem, including its requirements and constraints."
  agent: software_architect

create_algorithm_task:
  description: |
    Create an efficient algorithm to solve the LeetCode problem:\n\n{leetcode_problem}.
    - The algorithm should be well-defined and efficient.
    - The algorithm should be easy to understand and implement.
    - The algorithm should be optimized for performance and memory.
  expected_output: |
    A well-defined algorithm that efficiently solves the LeetCode problem.
    - Do not generate any code, just the algorithm.
  agent: software_architect

write_code_task:
  description: |
    Implement the algorithm by writing Python code to solve the LeetCode problem.
    - Use only native Python libraries.
    - Document the code thoroughly, explaining the functionality of each line.
  expected_output: "Well-documented, efficient Python code adhering to the provided algorithm."
  agent: software_engineer

write_test_cases_task:
  description: "Write comprehensive test cases to verify the correctness of the code."
  expected_output: "Test cases that cover all edge cases and ensure the code works as intended."
  agent: tester

run_test_cases_task:
  description: "Run the test cases and identify any bugs or issues in the code."
  expected_output: "A report of any bugs or issues found during testing."
  agent: tester

review_code_task:
  description: |
    Review the code for coding style, efficiency, and potential issues.
    - the code must use native Python libraries
    - the code must be clean and efficient
    - the code must be well-documented
    - the code must follow the provided algorithm
    - the code must be optimized for performance and memory
  expected_output: "Feedback on the code's structure and style."
  agent: qa_specialist

suggest_improvements_task:
  description: |
    Suggest improvements to the code to enhance the overall quality of the solution.
    - The code should be optimized for performance and readability.
  expected_output: "Suggestions for quality and performance improvements."
  agent: qa_specialist

finalize_code_task:
  description: "Finalize the code based on the feedback received."
  expected_output: "Python file with the final version of the code. Output only python code. No markdown text."
  agent: software_engineer

